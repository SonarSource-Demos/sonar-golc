name: Stub Build and Manual Approval Release

on:
  push:
    branches:
      - FoxDev  # Only run on changes to the FoxDev branch
  workflow_dispatch: # Allows manual triggers

jobs:
  # Stub Build Job with Matrix for Multiple OS and Architectures
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: [golc, results]
        goos: [linux, windows, darwin]   # Target operating systems
        goarch: [amd64, arm64]           # Target architectures

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Specify your Go version

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          go mod tidy
          go mod download  # Download all dependencies

      - name: Build Go applications for ${{ matrix.goos }}/{{ matrix.goarch }}
        run: |
          echo "Building app1 for OS: ${{ matrix.goos }}, Architecture: ${{ matrix.goarch }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${{ matrix.goos }}-${{ matrix.goarch }}/golc/main ./golc
          
          echo "Building app2 for OS: ${{ matrix.goos }}, Architecture: ${{ matrix.goarch }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/${{ matrix.goos }}-${{ matrix.goarch }}/results/main ./results


      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/${{ matrix.goos }}-${{ matrix.goarch }}/

  # Manual Approval & Release Job
  release_stub:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production # Change this to your environment name
    steps:
      - name: Stub Release Process
        run: echo "Release process started... (stubbed)"